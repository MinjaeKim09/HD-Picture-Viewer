[i]HDPICV


0->APOS
//total pics detected (*3)
0->TOTALPICS
//thumbnail coordinates
10->THUMBNAILX
20->THUMBNAILY
//Selection rectangle coordinates
10->RECTX
10->RECTY

//Error image
//DefineSprite(40,60,"E6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D9292E392929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92E3E3E3929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2DE3E3E3E3E39292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2DE3E3E3E3E39292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2DE3E3E3E3E39292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2DE3E3E3FFE3E3E392E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2DE3E3E3FFE3E3E392E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2DE3E3E3E3FFE3E3E3E3E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2DE3E3E3FFFFFFE3E3E3E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2DE3E3E3E3FFFFFFE3E3E3E3E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2DE3E3E3FFFFFFFFFFE3E3E3E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2DE3E3E3FFC0C0C0FFE3E3E3E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2DE3E3E3FFFFC0C0C0FFFFE3E3E3E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2DE3E3E3FFFFC0C0C0FFFFE3E3E3E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2DE3E3E3E3FFFFC0C0C0FFFFE3E3E3E3E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2DE3E3E3FFFFFFC0C0C0FFFFFFE3E3E3E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1DE3E3E3E3FFFFFFC0C0C0FFFFFFE3E3E3E3E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1DE3E3E3FFFFFFFFC0C0C0FFFFFFFFE3E3E3E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1DE3E3E3FFFFFFFFC0C0C0FFFFFFFFE3E3E3E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1DE3E3E3FFFFFFFFFFC0C0C0FFFFFFFFFFE3E3E3E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1DE3E3E3FFFFFFFFFFC0C0C0FFFFFFFFFFE3E3E3E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1DE3E3E3E3FFFFFFFFFFC0C0C0FFFFFFFFFFE3E3E3E3E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1DE3E3E3FFFFFFFFFFFFC0C0C0FFFFFFFFFFFFE3E3E3E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1DE3E3E3E3FFFFFFFFFFFFC0C0C0FFFFFFFFFFFFE3E3E3E33A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1DE3E3E3FFFFFFFFFFFFFFC0C0C0FFFFFFFFFFFFFFE3E3E33A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1DE3E3E3FFFFFFFFFFFFFFC0C0C0FFFFFFFFFFFFFFE3E3E33A3A3A3A3A3A3A3AE6E6E6E6E6E61D1DE3E3E3FFFFFFFFFFFFFFFFC0C0C0FFFFFFFFFFFFFFFFE3E3E33A3A3A3A3A3A3AE6E6E6E6E6E61D1DE3E3E3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE3E3E33A3A3A3A3A3A3AE6E6E6E6E6E61DE3E3E3E3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE3E3E3E33A3A3A3A3A3AE6E6E6E6E6E61DE3E3E3FFFFFFFFFFFFFFFFFFC0C0C0FFFFFFFFFFFFFFFFFFE3E3E33A3A3A3A3A3AE6E6E6E6E6E6E3E3E3E3FFFFFFFFFFFFFFFFFFC0C0C0FFFFFFFFFFFFFFFFFFE3E3E3E33A3A3A3A3AE6E6E6E6E6E6E3E3E3FFFFFFFFFFFFFFFFFFFFC0C0C0FFFFFFFFFFFFFFFFFFFFE3E3E33A3A3A3A3AE6E6E6E6E6E6E3E3E3FFFFFFFFFFFFFFFFFFFFC0C0C0FFFFFFFFFFFFFFFFFFFFE3E3E33A3A3A3A3AE6E6E6E6E6E3E3E3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE3E3E33A3A3A3AE6E6E6E6E6E3E3E3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE3E3E33A3A3A3AE6E6E6E6E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E33A3A3AE6E6E6E6E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E33A3A3AE6E6E6E6E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E33A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AE6E6E6E6E6E61D1D1D1D1D1D2D2D2D2D2D2D92929292929292E0E0E0E0E0E0E03A3A3A3A3A3A3A3AFFFFFFFFDEDEB6B6B6B6B5B5B59494949493936B6B6B6B4A4A4A4A49494921210000000000000000FFFFFFFFDEDEB6B6B6B6B5B5B59494949493936B6B6B6B4A4A4A4A49494921210000000000000000FFFFFFFFDEDEB6B6B6B6B5B5B59494949493936B6B6B6B4A4A4A4A49494921210000000000000000FFFFFFFFDEDEB6B6B6B6B5B5B59494949493936B6B6B6B4A4A4A4A49494921210000000000000000FFFFFFFFDEDEB6B6B6B6B5B5B59494949493936B6B6B6B4A4A4A4A49494921210000000000000000FFFFFFFFDEDEB6B6B6B6B5B5B59494949493936B6B6B6B4A4A4A4A49494921210000000000000000FFFFFFFFDEDEB6B6B6B6B5B5B59494949493936B6B6B6B4A4A4A4A49494921210000000000000000FFFFFFFFDEDEB6B6B6B6B5B5B59494949493936B6B6B6B4A4A4A4A49494921210000000000000000FFFFFFFFDEDEB6B6B6B6B5B5B59494949493936B6B6B6B4A4A4A4A49494921210000000000000000")->ERRORIMAGE

Begin
//detects left side
While Detect(^^oAPOS,"HDPICV2L"->LPIC
   CloseAll
   Open(LPIC,"r->LPICSLOT
   If LPICSLOT=0
      Goto WRONGPIC
   End
	0->BPOS
	
   //When it's the wrong right side, go to here
	Lbl WRONGPIC
	//detects right side
   While Detect(^^oBPOS,"HDPICV2R"->RPIC
		Seek(8,0,LPICSLOT   // important!
		//when a side is found
		Open(RPIC,"r->RPICSLOT
		//if it's wrong side, or it fails
      If RPICSLOT=0
         Goto WRONGPIC
      End
     
      Seek(8,0,RPICSLOT
		0->WRONGPIC
		//checks if name is correct
      For(CHAR,0,7
         If GetChar(LPICSLOT)!=GetChar(RPICSLOT
            Close(RPICSLOT
            Goto WRONGPIC
         End
      End
      Goto CORRECTPIC
   End
	Goto STOP
	
   Lbl CORRECTPIC
	3+TOTALPICS->TOTALPICS
	LPIC->{L1+TOTALPICS}
	
   3+TOTALPICS->TOTALPICS
	RPIC->{L2+TOTALPICS}


	
	TOTALPICS/3->SIMPLETOTAL
   //thumbnail x
	10+150*((remainder(SIMPLETOTAL,4)=0))->LPICX-20+(*{GetDataPtr(LPICSLOT)})/2->RPICX
	//thumbnail y
   10+70*((SIMPLETOTAL>4)+(SIMPLETOTAL>8))->LPICY->RPICY

//scales the thumbnails
	DefineSprite(60,60->THUMBNAIL
	60->*{THUMBNAIL}
	60->*{THUMBNAIL+1}
	// outputs the thumbnails
	ScaleSprite(GetDataPtr(LPICSLOT),THUMBNAIL)
	Sprite_NoClip(THUMBNAIL,LPICX,LPICY)
	ScaleSprite(GetDataPtr(RPICSLOT),THUMBNAIL)
	Sprite_NoClip(THUMBNAIL,RPICX,RPICY)
	
	
	//Pause 
	//Sprite_NoClip(GetDataPtr(LPICSLOT),0,0
	//Sprite_NoClip(GetDataPtr(RPICSLOT),(*{GetDataPtr(LPICSLOT)}),0
    //Pause 
   
End


//bottom bar
det(2,0
det(42,0,220,320,20

//Selector!
det(2,18
While KEY!=15
	getKey->KEY
	If KEY!=0
		det(2,255
		//clears prev selector
		Rectangle_NoClip(RECTX,RECTY,130,60)
		//Selector placement tests
		150*(((KEY=3) and (RECTX=10))-((KEY=2) and (RECTX=160)))+RECTX->RECTX
		70*(((KEY=1) and (RECTY<=80))-((KEY=4) and (RECTY>=80)))+RECTY->RECTY
		
		det(2,18
	End
	//places new selector
	Rectangle_NoClip(RECTX,RECTY,130,60)

End

Lbl STOP
CloseAll
det(1
Disp "End!
Pause 