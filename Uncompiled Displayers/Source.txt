[i]HDPICV



0->APOS
0->PAGE
0->TOTALPICS
10->THUMBNAILX
20->THUMBNAILY
10->RECTX
10->RECTY

While KEY!=15
	Output(2,2,"Det")
		Pause 
	Call DETECTPICS
	Output(2,2,"Disp")
		Pause 
	Call DISPTHUMB
	Output(2,2,"Selc")
		Pause 
	Call SELECTOR
End



Lbl DETECTPICS
0->TOTALPICS
 
// Allocate memory for picture names
Alloc(9)->LPICNAME
Alloc(9)->RPICNAME
 
// Detect left half of the images
Output(2,2,"1")
Pause 
0->APOS
While Detect(^^oAPOS,"HDPICV2L"->LPIC
    // Open the variable - we are sure it exists because it's detected
    Open(LPIC,"r"->LPICSLOT
 
    // Write the name to the allocated memory
    Seek(8,0,LPICSLOT
    Read(LPICNAME,8,1,LPICSLOT

	Output(2,2,"2")
	Pause 
	".
    // Detect right half of the images
    0->BPOS
    While Detect(^^oBPOS,"HDPICV2R"->RPIC
        // Open the variable - we are sure it exists because it's detected
        Open(RPIC,"r"->RPICSLOT
 
        // Write the name
        Seek(8,0,RPICSLOT
        Read(RPICNAME,8,1,LPICSLOT

		Output(2,2,"3  ")
		
		".
		Output(3,3,LPICNAME)
		Output(4,4,RPICNAME)
		Pause 
		".
        // Compare names compare returns 0 if true
		If not([Med]LPICNAME,RPICNAME
			Output(2,2,"3.1")
			Pause 
			".
			// Yay, they matched! Now store the data pointer into L1
			TOTALPICS+3->TOTALPICS
            GetDataPtr(LPICSLOT)->L1(TOTALPICS
            GetDataPtr(RPICSLOT)->L2(TOTALPICS
            
        End
 
        // Close the right half of the image
        Close(RPICSLOT
    End
	Output(2,2,"4")
	Pause 
	".
    // Close the left half of the image
    Close(LPICSLOT
End
Output(2,2,"5")
Pause 
Return

Lbl DISPTHUMB
Output(2,2,TOTALPICS)
Pause 

Begin
TOTALPICS/3->SIMPLETOTAL
1->I
While 6>=I and (I*6)=<TOTALPICS
	L1(I*3)->LPIC
	L2(I*3)->RPIC
	Output(2,2,I)
	Output(2,3,LPIC)
	Output(2,4,RPIC)
	10+150*((remainder(SIMPLETOTAL,4)=0))->LPICX-20+(LPIC)/2->RPICX
	10+70*((SIMPLETOTAL>4)+(SIMPLETOTAL>8))->LPICY->RPICY
	
	DefineSprite(40,60->THUMBNAIL
	40->*{THUMBNAIL}
	60->*{THUMBNAIL+1}
	ScaleSprite(LPIC,THUMBNAIL)
	Sprite_NoClip(THUMBNAIL,LPICX,LPICY)
	ScaleSprite(RPIC,THUMBNAIL)
	Sprite_NoClip(THUMBNAIL,RPICX,RPICY)
	I+1->I
End

Return


Lbl SELECTOR
SetColor(0
FillRectangle_NoClip(0,230,320,10

SetColor(18
While KEY!=15
	getKey->KEY
	If KEY!=0
		SetColor(255
		Rectangle_NoClip(RECTX,RECTY,130,60)
		150*(((KEY=3) and (RECTX=10))-((KEY=2) and (RECTX=160)))+RECTX->RECTX
		70*(((KEY=1) and (RECTY<150))-((KEY=4) and (RECTY>=80)))+RECTY->RECTY
		
		SetColor(18
	End
	
	Rectangle_NoClip(RECTX,RECTY,130,60)
	
End

Return


Lbl STOP
CloseAll
det(1
Output(2,2,"End!
Pause 
