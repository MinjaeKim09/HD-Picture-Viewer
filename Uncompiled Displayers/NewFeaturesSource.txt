[i]BITY

27->RR
38->GG
14->BB
16777215->MIN
0->ENTRY
//enters graphics mode
det(0
//scans each part of the palette for 
For(I,0,255
	//points to the screen palette and stores it to C
	 **{|EE30200+(I*2)}->C
	//converts the number into RGB values
	(Cplotdot31)->B
	(Cplotdot31744)->R
	(R/1024)->R
	(Cplotdot992)->G
	(G/16)->G
	(Cplotdot32768)->E
	(E/32768)->E
	(GplotcrossE)->G
	//Finds the distance betweent he RRGGBB values I want to find and the ones it found
	(R-RR)*(R-RR)+(G-GG)*(G-GG)+(B-BB)*(B-BB)->DISTANCE
	If DISTANCE<MIN
		DISTANCE->MIN
		I->ENTRY
	End
	
	
End
//ends graphic mode
det(1

Output(1,1,MIN
Output(2,1,ENTRY
Pause 



//[MateoC] Yep
//8:05:09 PM [TheLastMillennial] C AND 31
//8:04:52 PM [#] [MateoC] So how do you get B from C?

// [MateoC] Yes
//8:06:50 PM [TheLastMillennial] 31744
//8:06:28 PM [TheLastMillennial] So I need to do 0111110000000000 but in base 10
//8:06:01 PM [#] [MateoC] Now you need to get R from C



//[TheLastMillennial] so since there are 10 0's you want to get rid of, you move over 10 bits
//[MateoC] (C AND 31744)/(2^10)->R
//[MateoC] So we need to shift it right so it fits in 5
//8:10:47 PM [#] [MateoC] Yes
//8:10:45 PM [TheLastMillennial] 15
//8:10:39 PM [TheLastMillennial] oh!
//:10:34 PM [#] [MateoC] How many bits is that
//8:10:32 PM [TheLastMillennial] yes
//8:10:28 PM [#] [MateoC] 111110000000000 is 31744 right?


// [TheLastMillennial] (C AND 992)/(2^5)->G
//8:16:08 PM [#] [MateoC] So what would the full code look like?
// [TheLastMillennial] 0000001111100000 which is 992
//8:15:09 PM [#] [MateoC] (Ignore the 1 bit for now)
//8:15:03 PM [#] [MateoC] All right, now how would you get only the 5 bits of green?


//[MateoC] 20:34 <MateoC> So what we do is we get each component of red, blue, and green into variables. We'll call them R1, G1, B1
//8:26:40 PM [#] [MateoC] So that just finished this line:
//[MateoC] Cool, here's the codes:
//(C AND 31)->B
//(C AND 31744)/(2^10)->R
//((C AND 992)/(2^4)) OR ((C AND 32768)/(2^15))->G

//<MateoC> Now, we have to search the screen (xlib) palette for a color that matches best these R1, G1, B1 values 


